import { type Resolvers, type ResolversTypes } from './graphql'
import { Device } from 'a-remarkable-js-sdk'

const deviceDescriptionMap = {
  browser_chrome: 'browser-chrome',
  desktop_macos: 'desktop-macos',
  desktop_windows: 'desktop-windows',
  mobile_android: 'mobile-android',
  mobile_ios: 'mobile-ios',
  remarkable: 'remarkable'
}

export const resolvers: Resolvers = {
  Query: {
    hello: (): string => {
      return 'Hello, world!'
    }
  },
  Mutation: {
    createDevice: async (_, { id, description, oneTimeCode }): Promise<ResolversTypes['Device']> => {
      // @ts-expect-error - TODO: map autogenerated description to DeviceDescription
      const newPairedDevice = await Device.pair(id, deviceDescriptionMap[description], oneTimeCode)

      return {
        id: newPairedDevice.id,
        // @ts-expect-error - TODO: map autogenerated description to DeviceDescription
        description: newPairedDevice.description,
        token: newPairedDevice.pairToken.token
      }
    }
  }
}
